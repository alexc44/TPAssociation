/*
 * Created on 16 févr. 2014 ( Time 14:24:48 )
 * Generated by Telosys Tools Generator ( version 2.1.0 )
 */
// This Bean has a basic Primary Key (not composite) 

package edu.prog3.tp.association.bean;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.List;

import javax.persistence.*;

/**
 * Persistent class for entity stored in table "ADHERENT"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="ADHERENT", schema="ASSO" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="Adherent.countAll", query="SELECT COUNT(x) FROM Adherent x" )
} )
public class Adherent implements Serializable
{
    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @Column(name="ID", nullable=false, length=8)
    private String     id           ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="MDP", nullable=false, length=32)
    private String     mdp          ;

    @Column(name="NOM", nullable=false, length=50)
    private String     nom          ;

    @Column(name="PRENOM", nullable=false, length=20)
    private String     prenom       ;

    @Column(name="ADRESSE", nullable=false, length=100)
    private String     adresse      ;

    @Column(name="CP", nullable=false, length=5)
    private String     cp           ;

    @Column(name="VILLE", nullable=false, length=100)
    private String     ville        ;

    @Column(name="PAYS", nullable=false, length=25)
    private String     pays         ;



    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
    @OneToMany(mappedBy="adherent", targetEntity=Commande.class)
    private List<Commande> listOfCommande;


    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public Adherent()
    {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setId( String id )
    {
        this.id = id ;
    }
    public String getId()
    {
        return this.id;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : MDP ( VARCHAR ) 
    public void setMdp( String mdp )
    {
        this.mdp = mdp;
    }
    public String getMdp()
    {
        return this.mdp;
    }

    //--- DATABASE MAPPING : NOM ( VARCHAR ) 
    public void setNom( String nom )
    {
        this.nom = nom;
    }
    public String getNom()
    {
        return this.nom;
    }

    //--- DATABASE MAPPING : PRENOM ( VARCHAR ) 
    public void setPrenom( String prenom )
    {
        this.prenom = prenom;
    }
    public String getPrenom()
    {
        return this.prenom;
    }

    //--- DATABASE MAPPING : ADRESSE ( VARCHAR ) 
    public void setAdresse( String adresse )
    {
        this.adresse = adresse;
    }
    public String getAdresse()
    {
        return this.adresse;
    }

    //--- DATABASE MAPPING : CP ( VARCHAR ) 
    public void setCp( String cp )
    {
        this.cp = cp;
    }
    public String getCp()
    {
        return this.cp;
    }

    //--- DATABASE MAPPING : VILLE ( VARCHAR ) 
    public void setVille( String ville )
    {
        this.ville = ville;
    }
    public String getVille()
    {
        return this.ville;
    }

    //--- DATABASE MAPPING : PAYS ( VARCHAR ) 
    public void setPays( String pays )
    {
        this.pays = pays;
    }
    public String getPays()
    {
        return this.pays;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    public void setListOfCommande( List<Commande> listOfCommande )
    {
        this.listOfCommande = listOfCommande;
    }
    public List<Commande> getListOfCommande()
    {
        return this.listOfCommande;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(id);
        sb.append("]:"); 
        sb.append(mdp);
        sb.append("|");
        sb.append(nom);
        sb.append("|");
        sb.append(prenom);
        sb.append("|");
        sb.append(adresse);
        sb.append("|");
        sb.append(cp);
        sb.append("|");
        sb.append(ville);
        sb.append("|");
        sb.append(pays);
        return sb.toString(); 
    } 

}
