/*
 * Created on 16 févr. 2014 ( Time 14:24:48 )
 * Generated by Telosys Tools Generator ( version 2.1.0 )
 */
// This Bean has a composite Primary Key  


package edu.prog3.tp.association.bean;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;


import javax.persistence.*;

/**
 * Persistent class for entity stored in table "COMMANDE_ARTICLE"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="COMMANDE_ARTICLE", schema="ASSO" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="CommandeArticle.countAll", query="SELECT COUNT(x) FROM CommandeArticle x" ),
  @NamedQuery(name="CommandeArticle.getAllArticleByCommande", query="SELECT x FROM CommandeArticle x JOIN x.commande c WHERE x.commande.id = :id"),
  @NamedQuery(name="CommandeArticle.getAllArticleByAdherent", query="SELECT x FROM CommandeArticle x, Adherent a WHERE x.commande.adherent.id = a.id AND a.id = :id")

} )
public class CommandeArticle implements Serializable
{
    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( EMBEDDED IN AN EXTERNAL CLASS )  
    //----------------------------------------------------------------------
	@EmbeddedId
    private CommandeArticleKey compositePrimaryKey ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="QUANTITE", nullable=false)
    private Integer    quantite     ;



    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
    @ManyToOne
    @JoinColumn(name="COMMANDE_ID", referencedColumnName="ID", insertable=false, updatable=false)
    private Commande   commande    ;

    @ManyToOne
    @JoinColumn(name="ARTICLE_CODE", referencedColumnName="CODE", insertable=false, updatable=false)
    private Article    article     ;


    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public CommandeArticle()
    {
		super();
		this.compositePrimaryKey = new CommandeArticleKey();       
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE COMPOSITE KEY 
    //----------------------------------------------------------------------
    public void setCommandeId( Integer commandeId )
    {
        this.compositePrimaryKey.setCommandeId( commandeId ) ;
    }
    public Integer getCommandeId()
    {
        return this.compositePrimaryKey.getCommandeId() ;
    }
    public void setArticleCode( Integer articleCode )
    {
        this.compositePrimaryKey.setArticleCode( articleCode ) ;
    }
    public Integer getArticleCode()
    {
        return this.compositePrimaryKey.getArticleCode() ;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : QUANTITE ( INTEGER ) 
    public void setQuantite( Integer quantite )
    {
        this.quantite = quantite;
    }
    public Integer getQuantite()
    {
        return this.quantite;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    public void setCommande( Commande commande )
    {
        this.commande = commande;
    }
    public Commande getCommande()
    {
        return this.commande;
    }

    public void setArticle( Article article )
    {
        this.article = article;
    }
    public Article getArticle()
    {
        return this.article;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        if ( compositePrimaryKey != null ) {  
            sb.append(compositePrimaryKey.toString());  
        }  
        else {  
            sb.append( "(null-key)" ); 
        }  
        sb.append("]:"); 
        sb.append(quantite);
        return sb.toString(); 
    } 

}
