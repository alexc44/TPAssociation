/*
 * Created on 16 févr. 2014 ( Time 14:24:48 )
 * Generated by Telosys Tools Generator ( version 2.1.0 )
 */
// This Bean has a basic Primary Key (not composite) 

package edu.prog3.tp.association.bean;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.List;

import javax.persistence.*;

/**
 * Persistent class for entity stored in table "ARTICLE"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="ARTICLE", schema="ASSO" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="Article.countAll", query="SELECT COUNT(x) FROM Article x" ),
  @NamedQuery ( name="Article.getArticleInStock", query="SELECT x FROM Article x WHERE x.stock > 0" )
} )
public class Article implements Serializable
{
    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="CODE", nullable=false)
    private Integer    code         ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="NOM", nullable=false, length=25)
    private String     nom          ;

    @Column(name="PRIX", nullable=false)
    private Double     prix         ;

    @Column(name="STOCK", nullable=false)
    private Integer    stock        ;



    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
    @OneToMany(mappedBy="article", targetEntity=CommandeArticle.class)
    private List<CommandeArticle> listOfCommandeArticle;


    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public Article()
    {
		super();
    }
    
    
    /**
	 * @param code
	 * @param nom
	 * @param prix
	 * @param stock
	 */
	public Article(Integer code, String nom, Double prix, Integer stock) {
		super();
		this.code = code;
		this.nom = nom;
		this.prix = prix;
		this.stock = stock;
	}
	
	/**
	 * @param code
	 * @param nom
	 * @param prix
	 * @param stock
	 * @param listOfCommandeArticle
	 */
	public Article(Integer code, String nom, Double prix, Integer stock,
			List<CommandeArticle> listOfCommandeArticle) {
		this(code, nom, prix, stock);
		this.listOfCommandeArticle = listOfCommandeArticle;
	}


	//----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setCode( Integer code )
    {
        this.code = code ;
    }
    public Integer getCode()
    {
        return this.code;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : NOM ( VARCHAR ) 
    public void setNom( String nom )
    {
        this.nom = nom;
    }
    public String getNom()
    {
        return this.nom;
    }

    //--- DATABASE MAPPING : PRIX ( DOUBLE ) 
    public void setPrix( Double prix )
    {
        this.prix = prix;
    }
    public Double getPrix()
    {
        return this.prix;
    }

    //--- DATABASE MAPPING : STOCK ( INTEGER ) 
    public void setStock( Integer stock )
    {
        this.stock = stock;
    }
    public Integer getStock()
    {
        return this.stock;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    public void setListOfCommandeArticle( List<CommandeArticle> listOfCommandeArticle )
    {
        this.listOfCommandeArticle = listOfCommandeArticle;
    }
    public List<CommandeArticle> getListOfCommandeArticle()
    {
        return this.listOfCommandeArticle;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(code);
        sb.append("]:"); 
        sb.append(nom);
        sb.append("|");
        sb.append(prix);
        sb.append("|");
        sb.append(stock);
        return sb.toString(); 
    } 

}
